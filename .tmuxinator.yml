# ./.tmuxinator.yml
#
# MYBONK-core hackaton
# https://github.com/mybonk
# Tmuxinator configuration to make your life easier managing several nodes.
#
# Instructions: Make Tmuxinator load this configuration using the parameter '-p' 
#               and specify what node you want to connect to using the 'node' parameter 
#               which is the hostname or IP address of the node you want to connect to.
#               You need to have configured ssh passwordless (public/private key pair) 
#               or use Tailscale for this to work.
#               
#               Example: Start Tmuxinator on node mybonk-jay and name the instance console-jay
#                        $ tmuxinator start -p .tmuxinator.yml -n console-jay console node="mybonk-jay"


name: console
#root: ~/

# Optional tmux socket
# socket_name: foo

# Note that the pre and post options have been deprecated and will be replaced by
# project hooks.

# Project hooks

# Runs on project start, always
# on_project_start: command

# Run on project start, the first time
# on_project_first_start: command

# Run on project start, after the first time
# on_project_restart: command

# Run on project exit ( detaching from tmux session )
# on_project_exit: command

# Run on project stop
# on_project_stop: command

# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.
# pre_window: rbenv shell 2.0.0-p247
pre_window: 
  - ssh operator@<%= @settings["node"] %>

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
startup_window: logs

# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.
# startup_pane: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

windows:
  - CLI_config:
    command:
      - sleep 1
      - cd /etc/nixos
  - CLI_deploy:
      layout: even-vertical 
      # Synchronize all panes of this window, can be enabled before or after the pane commands run.
      # 'before' represents legacy functionality and will be deprecated in a future release, in favour of 'after'
      #synchronize: after
      command:
        - node_logs:
          - journalctl -f -n 30 
      local_shell:
        - local:
          - pwd
  - CLI_commands:
      layout: even-vertical
      panes:
        - logs:
          - journalctl --no-full  -f -n 20
        - command:
          - nodeinfo && sleep 2
          - bitcoin-cli -getinfo && sleep 2
  - journal:
      - journalctl -f -n 40
  - logs:
      layout: 1851,204x53,0,0[204x12,0,0,2,204x13,0,13,5,204x12,0,27,6,204x13,0,40{51x13,0,40,7,50x13,52,40,9,101x13,103,40,8}]
      panes:
        - fulcrum_mempool:
          - sleep 1
          - journalctl --no-full -f -n 30 -u fulcrum -u mempool
        - clightning:
          - sleep 1
          - journalctl --no-full -f -n 30 -u clightning
        - bitcoind:
          - sleep 1
          - journalctl --no-full -f -n 30 -u bitcoind
        - all_errors :
          - sleep 1
          - journalctl --no-full -f -n 30  -p err
  - console_top:
      - btop

